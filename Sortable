use std::cmp::Ordering;

trait Sortable {
    fn compare(&self, other: &Self) -> Ordering;
}

#[derive(Debug)]
struct Person {
    name: String,
    age: u32,
}

impl Sortable for Person {
    fn compare(&self, other: &Self) -> Ordering {
        self.age.cmp(&other.age)
    }
}

fn sort_people(mut people: Vec<Person>) -> Vec<Person> {
    people.sort_by(|a, b| a.compare(b));
    people
}

fn main() {
    let people = vec![
        Person { name: "Alice".to_string(), age: 30 },
        Person { name: "Bob".to_string(), age: 25 },
        Person { name: "Charlie".to_string(), age: 35 },
    ];
    let sorted = sort_people(people);
    println!("{:?}", sorted);
}
