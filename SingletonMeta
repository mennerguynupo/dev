# 定义一个元类，用于在类创建时修改类的行为
class SingletonMeta(type):
    _instances = {}

    def __call__(cls, *args, **kwargs):
        if cls not in cls._instances:
            instance = super().__call__(*args, **kwargs)
            cls._instances[cls] = instance
        return cls._instances[cls]

# 使用元类创建单例类
class Singleton(metaclass=SingletonMeta):
    def __init__(self):
        self.value = 42

# 测试单例模式
s1 = Singleton()
s2 = Singleton()
print(s1 is s2)  # 输出: True
